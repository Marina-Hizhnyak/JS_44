// # –ú–æ–¥—É–ª—å 4. –ó–∞–Ω—è—Ç–∏–µ 7. –ö–æ–ª–ª–±–µ–∫–∏. –°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏. forEach

// ## Example 1 - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü–∏–∏

// –ù–∞–ø–∏—à–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:

// - `createProduct(obj, callback)` - –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞ –±–µ–∑ id, –∞ —Ç–∞–∫–∂–µ
//   –∫–æ–ª–±–µ–∫. –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—ë—Ç –æ–±—å–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞, –¥–æ–±–∞–≤–ª—è—è –µ–º—É —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤
//   —Å–≤–æ–π—Å—Ç–≤–æ `id` –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –∫–æ–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ–±—å–µ–∫—Ç.
// - `logProduct(product)` - –∫–æ–ª–ª–±–µ–∫ –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –æ–±—å–µ–∫—Ç –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –ª–æ–≥–∏—Ä—É—é—â–∏–π –µ–≥–æ –≤
//   –∫–æ–Ω—Å–æ–ª—å
// - `logTotalPrice(product)` - –∫–æ–ª–ª–±–µ–∫ –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –æ–±—å–µ–∫—Ç –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –ª–æ–≥–∏—Ä—É—é—â–∏–π
//   –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ–Ω—Å–æ–ª—å

// ```js
// // –†–µ—à–µ–Ω–∏–µ
// function createProduct(partialProduct, callback) {
//   const product = { id: Date.now(), ...partialProduct };
//   callback(product);
// }

// function logProduct(product) {
//   console.log(product);
// }

// function createProduct(obj, callback) {
//   let result = {
//     ...obj,
//     type: "number",
//   };
//   callback(result);
// }

// function alert(resultObj) {
//   alert(resultObj);
// }

// function logger(resultObj) {
//   console.log(resultObj);
// }

// createProduct({ user: "Bob", age: 34 }, logger);
// createProduct({ user: "Bob", age: 34 }, alert);

// function logTotalPrice(product) {
//   console.log(product.price * product.quantity);
// }

// createProduct({ name: 'üçé', price: 30, quantity: 3 }, logProduct);
// createProduct({ name: 'üçã', price: 20, quantity: 5 }, logTotalPrice);
// ```

// function log(callback) {
//   callback(); // 5()
// }

// function add() {
//   return 2 + 3;
// }

// log(add());

// ## Example 2 - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü–∏–∏

// –î–æ–±–∞–≤—å—Ç–µ –æ–±—ä–µ–∫—Ç—É `account` –º–µ—Ç–æ–¥—ã `withdraw(amount, onSuccess, onError)` –∏
// `deposit(amount, onSuccess, onError)`, –≥–¥–µ –ø–µ—Ä–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä —ç—Ç–æ —Å—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏, –∞
// –≤—Ç–æ—Ä–æ–π –∏ —Ç—Ä–µ—Ç–∏–π - –∫–æ–ª–±–µ–∫–∏.

// –ú–µ—Ç–æ–¥ `withdraw` –≤—ã–∑—ã–≤–∞–µ—Ç onError –µ—Å–ª–∏ amount –±–æ–ª—å—à–µ TRANSACTION_LIMIT –∏–ª–∏
// this.balance, –∏ onSuccess –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.

// –ú–µ—Ç–æ–¥ `deposit` –≤—ã–∑—ã–≤–∞–µ—Ç onError –µ—Å–ª–∏ amount –±–æ–ª—å—à–µ TRANSACTION_LIMIT –∏–ª–∏ –º–µ–Ω—å—à–µ
// –ª–∏–±–æ —Ä–∞–≤–µ–Ω –Ω—É–ª—é, –∏ onSuccess –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.

// ```js
// // –†–µ—à–µ–Ω–∏–µ
// const TRANSACTION_LIMIT = 1000;

// const account = {
//   username: "Jacob",
//   balance: 400,
//   withdraw(amount, onSuccess, onError) {
//     if (this.balance < amount) {
//       onError("You dont have money");
//     } else {
//       onSuccess("Great");
//     }
//   },

//   deposit(amount, onSuccess, onError) {
//     if (this.balance > amount) {
//       onSuccess("Good Job");
//     } else {
//       onError("Bad Day");
//     }
//   },
// };

// const user = {
//   name: "Bob",
//   age: 23,
//   getInfo(name, onSuccess, onError) {
//     if (this.name !== name) {
//       onError("Invalid user");
//     } else {
//       onSuccess("Hello Bob");
//     }
//   },
// };

// function handleSuccess(message) {
//   console.log(`‚úÖ Success! ${message}`);
// }
// function handleError(message) {
//   console.log(`‚ùå Error! ${message}`);
// }

// account.withdraw(2000, handleSuccess, handleError);
// account.withdraw(600, handleSuccess, handleError);
// account.withdraw(300, handleSuccess, handleError);
// account.deposit(1700, handleSuccess, handleError);
// account.deposit(0, handleSuccess, handleError);
// account.deposit(-600, handleSuccess, handleError);
// account.deposit(600, handleSuccess, handleError);
// user.getInfo("John", handleSuccess, handleError);
// ```

// ## Example 3 - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü–∏–∏

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `each(array, callback)`, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ–∂–∏–¥–∞–µ—Ç
// –º–∞—Å—Å–∏–≤, –∞ –≤—Ç–æ—Ä—ã–º - —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞.
// –§—É–Ω–∫—Ü–∏—è each –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥—É—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
// –≤—ã–∑–æ–≤–∞ –∫–æ–ª–ª–±–µ–∫–∞.

// ```js
// // –†–µ—à–µ–Ω–∏–µ
// function each(array, callback) {
//   const newArr = [];
//   for (const el of array) {
//     newArr.push(callback(el));
//   }
//   return newArr;
// }

// const each = (array, cb) => {
//   const newArray = [];
//   for (let element of array) {
//     newArray.push(cb(element));
//   }
//   return newArray;
// };

// function myltiply(value) {
//   return value * 2;
// }

// const myltiply = (value) => value * 2;

// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return value * 2;
//   })
// );

// console.log(each([64, 49, 36, 25, 16], myltiply));
// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return value - 10;
//   }),
// );
// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return Math.sqrt(value);
//   }),
// );
// console.log(
//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
//     return Math.ceil(value);
//   }),
// );
// console.log(
//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
//     return Math.floor(value);
//   }),
// );
// ```

// ## Example 4 - –°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—è —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// ```js
// const createProduct = (partialProduct, callback) => {
//   const product = { id: Date.now(), ...partialProduct };
//   callback(product);
// };

// function logProduct(product) {
//   console.log(product);
// }

// function logTotalPrice(product) {
//   console.log(product.price * product.quantity);
// }

// createProduct({ name: "üçé", price: 30, quantity: 3 }, logProduct);
// createProduct({ name: "üçã", price: 20, quantity: 5 }, logTotalPrice);
// ```

// ## Example 5 - –°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—è —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// ```js
// const TRANSACTION_LIMIT = 1000;

// const account = {
//   username: 'Jacob',
//   balance: 400,
//   withdraw(amount, onSuccess, onError) {
//     if (amount > TRANSACTION_LIMIT) {
//       onError(`Amount should not exceed ${TRANSACTION_LIMIT} credits`);
//     } else if (amount > this.balance) {
//       onError(`Amount can't exceed account balance of ${this.balance} credits`);
//     } else {
//       this.balance -= amount;
//       onSuccess(`Account balance: ${this.balance}`);
//     }
//   },
//   deposit(amount, onSuccess, onError) {
//     if (amount > TRANSACTION_LIMIT) {
//       onError(`Amount should not exceed ${TRANSACTION_LIMIT} credits`);
//     } else if (amount <= 0) {
//       onError(`Amount must be more than 0 credits`);
//     } else {
//       this.balance += amount;
//       onSuccess(`Account balance: ${this.balance}`);
//     }
//   },
// };

// function handleSuccess(message) {
//   console.log(`‚úÖ Success! ${message}`);
// }
// function handleError(message) {
//   console.log(`‚ùå Error! ${message}`);
// }

// account.withdraw(2000, handleSuccess, handleError);
// account.withdraw(600, handleSuccess, handleError);
// account.withdraw(300, handleSuccess, handleError);
// account.deposit(1700, handleSuccess, handleError);
// account.deposit(0, handleSuccess, handleError);
// account.deposit(-600, handleSuccess, handleError);
// account.deposit(600, handleSuccess, handleError);
// ```

// ## Example 6 - –ò–Ω–ª–∞–π–Ω —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—è —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// ```js
// const each = (array, callback) => {
//   const newArr = [];
//   for (const el of array) {
//     newArr.push(callback(el));
//   }
//   return newArr;
// };

// console.log(each([64, 49, 36, 25, 16], (value) => value * 2));
// console.log(each([64, 49, 36, 25, 16], (value) => value - 10));
// console.log(each([64, 49, 36, 25, 16], (value) => Math.sqrt(value)));
// console.log(each([1.5, 2.1, 16.4, 9.7, 11.3], (value) => Math.ceil(value)));
// console.log(each([1.5, 2.1, 16.4, 9.7, 11.3], (value) => Math.floor(value)));
// ```

// ## Example 7 - –ú–µ—Ç–æ–¥ forEach

// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ `forEach` –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// ```js
// function logItems(items) {
//   console.log(items);
//   for (let i = 0; i < items.length; i += 1) {
//     console.log(`${i + 1} - ${items[i]}`);
//   }
// }

// logItems(["Mango", "Poly", "Ajax"]);
// logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]);
// ```

// function logItems(items) {
//   items.forEach(function (element, index) {
//     console.log(`${index + 1} - ${element}`);
//   });
// }

// function logItems(items) {
//   items.forEach((element, index) => `${index + 1} - ${element}`);
// }

// const logItems = (items) =>
//   items.forEach((element, index) => `${index + 1} - ${element}`);

// logItems(["Mango", "Poly", "Ajax"]);
// logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]);

// ## Example 8 - –ú–µ—Ç–æ–¥ forEach

// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ `forEach` –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// ```js
// function printContactsInfo({ names, phones }) {
//   const nameList = names.split(',');
//   const phoneList = phones.split(',');
//   for (let i = 0; i < nameList.length; i += 1) {
//     console.log(`${nameList[i]}: ${phoneList[i]}`);
//   }
// }

// printContactsInfo({
//   names: 'Jacob,William,Solomon,Artemis',
//   phones: '89001234567,89001112233,890055566377,890055566300',
// });
// ```

// ## Example 9 - –ú–µ—Ç–æ–¥ forEach

// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ `forEach` –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// ```js
// function cal—ÅulateAverage(...args) {
//   let total = 0;
//   for (let i = 0; i < args.length; i++) {
//     total += args[i];
//   }
//   return total / args.length;
// }

// console.log(cal—ÅulateAverage(1, 2, 3, 4)); // 2.5
// console.log(cal—ÅulateAverage(14, 8, 2)); // 8
// console.log(cal—ÅulateAverage(27, 43, 2, 8, 36)); // 23.2

// const numbers = [2, 4, 6, 8, 10];

// let result = numbers.forEach((number, index, array) => {
//   //   console.log("array", array);
//   // console.log(`${index + 1}`, `${number}`);
//   if (number < array[index + 1]) {
//     return true;
//   }

//   return false;
// });

// console.log(result);

// array.method((element, index, array) => console.log(element));
// array.forEach((element, index, array) => console.log(element));

//lesson #8 //////////////////////////////////////////////////////

// const allCourses = [
//   "–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
//   "—Ñ—ñ–∑–∏–∫–∞",
//   "—ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
//   "–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
//   "—Ñ—ñ–∑–∏–∫–∞",
//   "–±—ñ–æ–ª–æ–≥—ñ—è",
// ];

// const uniqueCourses = allCourses.filter(
//   (course, index, array) => array.indexOf(course) === index
// );

//1 []
//2 allCourses.indexOf('–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞) // 0
//3 0 === 0
// ["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞"]

// 1 // ["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞"]
// 2 allCourses.indexOf('—Ñ—ñ–∑–∏–∫–∞) // 1
// 3 index === 1
// 4 1 === 1
// 5 ["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "—Ñ—ñ–∑–∏–∫–∞"]

// 1 // ["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "—Ñ—ñ–∑–∏–∫–∞"]
// 2 allCourses.indexOf('—ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞) // 2
// 3 index === 2
// 4 2 === 2
// 5 ["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "—Ñ—ñ–∑–∏–∫–∞", "—ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"]

// 1 ["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "—Ñ—ñ–∑–∏–∫–∞", "—ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"]
// 2 allCourses.indexOf("–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞") // 0
// 3 index === 3
// 5 0 === 3 // false
// 6 ["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "—Ñ—ñ–∑–∏–∫–∞", "—ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"]

// console.log("uniqueCourses", uniqueCourses);

// const pizzaPalace = {
//   pizzas: ["Ultracheese", "Smoked", "Four meats"],
//   order(pizzaName, onSuccess, onError) {
//     return this.pizzas.includes(pizzaName)
//       ? onSuccess(pizzaName)
//       : onError(pizzaName);
//   },
// };

// function makePizza(pizzaName) {
//   return `Your order is accepted. Cooking pizza ${pizzaName}.`;
// }

// // Callback for onError
// function onOrderError(error) {
//   return `Error! ${error}`;
// }

// // Method calls with callbacks
// console.log(pizzaPalace.order("Smoked", makePizza, onOrderError));
// console.log(pizzaPalace.order("Four meats", makePizza, onOrderError));
// console.log(pizzaPalace.order("Big Mike", makePizza, onOrderError));

// console.log(pizzaPalace.order("Vienna", makePizza, onOrderError));

// const add = (a, b) => a + b;
// add(2, 3)

// const filterArray = (arr) => {
//   const newArr = arr.slice();
//   newArr.push(2);
//   return arr;
// };

// # –ú–æ–¥—É–ª—å 4. –ó–∞–Ω—è—Ç–∏–µ 8. –ü–µ—Ä–µ–±–∏—Ä–∞—é—â–∏–µ –º–µ—Ç–æ–¥—ã –º–∞—Å—Å–∏–≤–∞

// ## –ö–æ–ª–ª–µ–∫—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ —Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏

// const result = array.forEach((el) => el * 2); // result = undefined

// ```js
const cars = [
  {
    make: "Honda",
    model: "CR-V",
    type: "suv",
    amount: 14,
    price: 24045,
    onSale: true,
  },
  {
    make: "Honda",
    model: "Accord",
    type: "sedan",
    amount: 2,
    price: 22455,
    onSale: true,
  },
  {
    make: "Mazda",
    model: "Mazda 6",
    type: "sedan",
    amount: 8,
    price: 24195,
    onSale: false,
  },
  {
    make: "Mazda",
    model: "CX-9",
    type: "suv",
    amount: 7,
    price: 31520,
    onSale: true,
  },
  {
    make: "Toyota",
    model: "4Runner",
    type: "suv",
    amount: 19,
    price: 34210,
    onSale: false,
  },
  {
    make: "Toyota",
    model: "Sequoia",
    type: "suv",
    amount: 16,
    price: 45560,
    onSale: false,
  },
  {
    make: "Toyota",
    model: "Tacoma",
    type: "truck",
    amount: 4,
    price: 24320,
    onSale: true,
  },
  {
    make: "Ford",
    model: "F-150",
    type: "truck",
    amount: 11,
    price: 27110,
    onSale: true,
  },
  {
    make: "Ford",
    model: "Fusion",
    type: "sedan",
    amount: 13,
    price: 22120,
    onSale: true,
  },
  {
    make: "Ford",
    model: "Explorer",
    type: "suv",
    amount: 6,
    price: 31660,
    onSale: false,
  },
];
// ```

// ## Example 1 - –ú–µ—Ç–æ–¥ map

// –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è `getModels` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –º–æ–¥–µ–ª–µ–π (–ø–æ–ª–µ model) –≤—Å–µ—Ö
// –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.

// ```js
// const getModels = (cars) => cars.map((car) => car.model);

// console.table(getModels(cars));
// ```

// ## Example 2 - –ú–µ—Ç–æ–¥ map

// –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è `makeCarsWithDiscount` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –∏–∑–º–µ–Ω–Ω—ã–º
// –∑–Ω–∞—á–µ–Ω–∏–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ `price` –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Å–∫–∏–¥–∫–∏.

// ```js
// const makeCarsWithDiscount = (cars, discount) =>
//   cars.map((car) => ({ ...car, price: car.price - car.price * discount }));

// const makeCarsWithDiscount = (cars, discount) =>
//   cars.map((car) => ({ ...car, price: car.price * (1 - discount) }));

// const makeCarsWithDiscount = (cars, discount) =>
//   cars.map((car) => car.price * (1 - discount)); /// –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ

// console.table(makeCarsWithDiscount(cars, 0.2));
// console.table(makeCarsWithDiscount(cars, 0.4));
// ```

// ## Example 3 - –ú–µ—Ç–æ–¥ filter

// –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è `filterByPrice` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Ü–µ–Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –º–µ–Ω—å—à–µ
// —á–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ `threshold`.

// ```js
// const filterByPrice = (cars, threshold) =>
//   cars.filter((car) => car.price < threshold);

// console.table(filterByPrice(cars, 30000));
// console.table(filterByPrice(cars, 25000));
// ```

// ## Example 4 - –ú–µ—Ç–æ–¥ filter

// –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è `getCarsWithDiscount` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Å–≤–æ–π—Å—Ç–≤–æ
// onSale –∫–æ—Ç–æ—Ä—ã—Ö true.

// ```js
// const getCarsWithDiscount = (cars) => cars.filter((car) => car.onSale);

// const getCarsWithDiscount = (cars) => cars.filter((car) => car.onSale === true);

// console.table(getCarsWithDiscount(cars));
// ```

// ## Example 5 - –ú–µ—Ç–æ–¥ filter

// –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è `getCarsWithType` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Ç–∏–ø –∫–æ—Ç–æ—Ä—ã—Ö
// —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ `type`.

// ```js
// const getCarsWithType = (cars, type) => cars.filter((car) => car.type === type);

// console.table(getCarsWithType(cars, "suv"));
// console.table(getCarsWithType(cars, "sedan"));
// ```

// ## Example 6 - –ú–µ—Ç–æ–¥ find

// ```js
// const getCarByModel = (cars, model) => cars.find((car) => car.model === model);

// console.log(getCarByModel(cars, "F-150"));
// console.log(getCarByModel(cars, "CX-9"));
// ```

// ## Example 7 - –ú–µ—Ç–æ–¥ sort

// –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è `sortByAscendingAmount` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
// –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≤–æ–∑–≤—Ä–∞—Å—Ç–∞–Ω–∏—é –∑–Ω–∞—á–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤–∞ `amount`.

// ```js
// const sortByAscendingAmount = (cars) => [
//   ...cars.sort((a, b) => b.amount - a.amount), // 14 - 2 = 12
// ];

// const sortByAscendingAmount = (cars) => [
//   ...cars.sort((a, b) => (a.amount > b.amount ? 23 : -999)),
// ];

// 1 a = {
//     make: "Honda",
//     model: "CR-V",
//     type: "suv",
//     amount: 14,
//     price: 24045,
//     onSale: true,
//   }

// b = {
//   make: "Honda",
//   model: "Accord",
//   type: "sedan",
//   amount: 2,
//   price: 22455,
//   onSale: true,
// },

// console.table(sortByAscendingAmount(cars));
// ```

// ## Example 8 - –ú–µ—Ç–æ–¥ sort

// –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è `sortByDescendingPrice` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
// –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ —É–±—ã–≤–∞–Ω–∏—é –∑–Ω–∞—á–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤–∞ `price`.

// ```js
// const sortByDescendingPrice = (cars) => [
//   ...cars.sort((a, b) => b.price - a.price),
// ];

// console.table(sortByDescendingPrice(cars));
// ``

// ## Example 9 - –ú–µ—Ç–æ–¥ sort

// –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è `sortByModel` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
// –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –º–æ–¥–µ–ª–∏ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –∏ –æ–±—Ä–∞—Ç–Ω–æ–º –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –≤ –∑–∞—Å–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç
// –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ `order`.

// ```js
// const sortByModel = (cars, order) =>
//   [...cars].sort((a, b) => {
//     if (order === "asc") {
//       return a.model > b.model ? 1 : -1;
//     }
//     if (order === "desc") {
//       return a.model < b.model ? 1 : -1;
//     }
//   });

// console.table(sortByModel(cars, "asc")); // a - z –∞ - —è ASCENDING
// console.table(sortByModel(cars, "desc")); // z - a —è - –∞ DESCENDING
// ```

// ## Example 10 - –ú–µ—Ç–æ–¥ reduce

// –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è `getTotalAmount` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π(–∑–Ω–∞—á–µ–Ω–∏–µ
// —Å–≤–æ–π—Å—Ç–≤ `amount`).

// ```js
// const getTotalAmount = (cars) => {
//   let total = 0;
//   for (let car of cars) {
//     total += car.amount;
//   }
//   return total;
// };

// const getTotalAmount = (cars) => cars.reduce((acc, car) => acc + car.amount);
// acc = {model, mark, price, amount} + 12

// console.log(getTotalAmount(cars));
// ```

// ## Example 11 - –¶–µ–ø–æ—á–∫–∏ –º–µ—Ç–æ–¥–æ–≤

// –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è `getAvailableCarNames` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –º–æ–¥–µ–ª–µ–π –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π, –Ω–æ
// —Ç–æ–ª—å–∫–æ —Ç–µ—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–π—á–∞—Å –Ω–∞ —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–µ.

// ```js
// const getModelsOnSale = (cars) =>
//   cars.filter((car) => car.onSale).map((car) => car.model);

// console.table(getModelsOnSale(cars));
// ```

// ## Example 12 - –¶–µ–ø–æ—á–∫–∏ –º–µ—Ç–æ–¥–æ–≤

// –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è `getSortedCarsOnSale` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –Ω–∞ —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–µ
// (—Å–≤–æ–π—Å—Ç–≤–æ onSale), –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —Ü–µ–Ω—ã.

// ```js
// const getSortedCarsOnSale = (cars) =>
//   cars.filter((car) => car.onSale).sort((a, b) => a.price - b.price);

// console.table(getSortedCarsOnSale(cars));

// console.log(cars);
// ```
